[{"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\App.js":"1","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\Product\\styles.js":"2","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Navbar\\styles.js":"5","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\index.js":"7","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\styles.js":"8","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\index.js":"9","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\lib\\Commerce.js":"10","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\styles.js":"12","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"16","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"17","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx":"19","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"20"},{"size":2759,"mtime":1611761028373,"results":"21","hashOfConfig":"22"},{"size":372,"mtime":1611262570400,"results":"23","hashOfConfig":"22"},{"size":763,"mtime":1611493955109,"results":"24","hashOfConfig":"22"},{"size":1309,"mtime":1611494071135,"results":"25","hashOfConfig":"22"},{"size":1633,"mtime":1611346272000,"results":"26","hashOfConfig":"22"},{"size":1530,"mtime":1611500410129,"results":"27","hashOfConfig":"22"},{"size":235,"mtime":1611584946757,"results":"28","hashOfConfig":"22"},{"size":300,"mtime":1611347867006,"results":"29","hashOfConfig":"22"},{"size":153,"mtime":1611259970601,"results":"30","hashOfConfig":"22"},{"size":265,"mtime":1611488612325,"results":"31","hashOfConfig":"22"},{"size":2153,"mtime":1611582769336,"results":"32","hashOfConfig":"22"},{"size":599,"mtime":1611496378651,"results":"33","hashOfConfig":"22"},{"size":1211,"mtime":1611510718318,"results":"34","hashOfConfig":"22"},{"size":356,"mtime":1611499007993,"results":"35","hashOfConfig":"22"},{"size":3424,"mtime":1611761927619,"results":"36","hashOfConfig":"22"},{"size":5665,"mtime":1611693960314,"results":"37","hashOfConfig":"22"},{"size":514,"mtime":1611760601028,"results":"38","hashOfConfig":"22"},{"size":2860,"mtime":1611761724319,"results":"39","hashOfConfig":"22"},{"size":1061,"mtime":1611697831949,"results":"40","hashOfConfig":"22"},{"size":1210,"mtime":1611584823585,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ibledm",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\App.js",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Navbar\\Navbar.jsx",[],["86","87"],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\index.js",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\index.js",[],["88","89"],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\lib\\Commerce.js",[],["90","91"],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["92","93"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/Commerce';\r\n\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n\r\n  const methods = useForm();\r\n\r\n  // Put shippingCountries into an array of objects so can loop over\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n  const options = shippingOptions.map((sO) => ({\r\n    id: sO.id,\r\n    label: `${sO.description} - ${sO.price.formatted_with_symbol}`,\r\n  }));\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n\r\n    console.log(countries);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  // Subdivisions depend on shippingCountry so has to be called after a shippingCountry is obtained or selected\r\n  const fetchSubdividions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  // shippingOptions will be updated when shippingDivsions change\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    region = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n\r\n    console.log('options', options);\r\n    console.log(checkoutTokenId, country, region);\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdividions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) {\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n    }\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='h6' gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput name='firstName' label='First name' />\r\n            <FormInput name='lastName' label='Last name' />\r\n            <FormInput name='address1' label='Address' />\r\n            <FormInput name='city' label='City' />\r\n            <FormInput name='zip' label='ZIP / Post code' />\r\n            <FormInput name='email' label='Email' />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {countries.map(({ id, label }) => (\r\n                  <MenuItem key={id} value={id}>\r\n                    {label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {subdivisions.map(({ id, label }) => (\r\n                  <MenuItem key={id} value={id}>\r\n                    {label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                value={shippingOption}\r\n                fullWidth\r\n                onChange={(e) => setShippingOption(e.target.value)}\r\n              >\r\n                {options.map(({ id, label }) => (\r\n                  <MenuItem key={id} value={id}>\r\n                    {label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} to='/cart' variant='outlined'>\r\n              Back to Cart\r\n            </Button>\r\n            <Button type='submit' variant='contained' color='primary'>\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx",[],"C:\\Users\\Dan\\Desktop\\code projects\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"94","replacedBy":"100"},{"ruleId":"96","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":83,"column":6,"nodeType":"104","endLine":83,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":97,"column":6,"nodeType":"104","endLine":97,"endColumn":27,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],["108"],["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"116","text":"117"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"118","text":"119"},[2559,2561],"[checkoutToken.id]",[2864,2885],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]